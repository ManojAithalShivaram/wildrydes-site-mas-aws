{"version":3,"sources":["container/AdminPage/action.js","component/table.js","container/AdminPage/AdminPage.js"],"names":["getDefaultAction","data","type","DEFAULT_ACTION","payload","DefaultEdit","lazy","Table","props","useState","numberOfPages","setNumberOfPages","dataSet","masterData","setMembers","currentPage","setCurrentPage","todosPerPage","setTodosPerPage","bulkDeleteItems","setBulkDeleteItems","allCheck","setallCheck","editDataFlag","setEditDataFlag","editData","setEditData","useEffect","perPage","p","Math","ceil","length","document","querySelectorAll","forEach","el","checked","total","handleClick","event","Number","currentTarget","id","onSlectMultipleDelte","temp","occur","_","findIndex","splice","push","indexOfLastMember","indexOfFirstMember","currentTodos","slice","renderMembers","map","todo","index","bulkDelete","name","onChange","Object","keys","keyName","keyIndex","Edit","Delete","className","aria-hidden","style","cursor","onClick","onDelete","onSave","onEdit","onGoBack","fields","f","i","fieldName","scope","value","del","class","onBulkDelete","aria-label","indents","AdminPage","dispatch","useDispatch","members","useSelector","state","admindReducer","default","_id","setDataSet","Totalrecord","setTotalrecord","search","setSearch","console","log","process","res","filter","obj","values","some","val","includes","updateUi","placeholder","aria-describedby","target","arr","ids","a","item","email","role"],"mappings":"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","file":"static/js/5.377ebe72.chunk.js","sourcesContent":["import {DEFAULT_ACTION} from './constant';\nexport default function getDefaultAction(data) {\n    return {\n      type: DEFAULT_ACTION,\n      payload: data,\n    };\n}","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { lazy, useEffect, useState } from 'react'\nimport _ from 'lodash';\nconst DefaultEdit = lazy(() => import('./DefaultEdit'));\n\nconst Table = (props) => {\n    let [numberOfPages, setNumberOfPages] = useState(1);\n    let [masterData, setMembers] = useState(props.dataSet);\n    let [currentPage, setCurrentPage] = useState(1);\n    let [todosPerPage, setTodosPerPage] = useState(0);\n    let [bulkDeleteItems, setBulkDeleteItems] = useState([]);\n    let [allCheck, setallCheck] = useState(false);\n    let [editDataFlag, setEditDataFlag] = useState(false);\n    let [editData, setEditData] = useState(null);\n    \n\n    useEffect(() => {\n        setTodosPerPage(props.perPage);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n      let p=0;\n      if(props.dataSet){\n        p = Math.ceil(props.dataSet.length/props.perPage);\n        if(p > currentPage && currentPage!==1)\n            setCurrentPage(currentPage-1);\n      }\n        \n      setNumberOfPages(p);\n      setMembers(props.dataSet);\n      setBulkDeleteItems([]);\n      document.querySelectorAll('input[type=checkbox]').forEach( el => el.checked = false);\n    }, [props.dataSet,props.total]);\n\n    let handleClick=(event)=>{\n        setCurrentPage(Number(event.currentTarget.id)+1);\n        document.querySelectorAll('input[type=checkbox]').forEach( el => el.checked = false);\n    }\n\n    let onSlectMultipleDelte=(event)=>{\n        let temp = bulkDeleteItems;\n        let occur = _.findIndex(temp, ['id', Number(event.currentTarget.id)]);\n        if(occur !== -1){\n            temp.splice(occur,1);\n        }else{\n            temp.push({\n                id : Number(event.currentTarget.id)\n            })\n        }\n        setBulkDeleteItems(temp);\n    }\n\n    let deleteSelected = () => {\n        props.onBulkDelete(bulkDeleteItems);\n    }\n\n    // Logic for displaying current masterData\n    const indexOfLastMember = currentPage * todosPerPage;\n    const indexOfFirstMember = indexOfLastMember - todosPerPage;\n    const currentTodos = masterData && masterData.slice(indexOfFirstMember, indexOfLastMember);\n\n\n    const renderMembers = currentTodos && currentTodos.map((todo, index) => {\n        return <tr key={index}>\n                    {props.bulkDelete ? (\n                        <td>\n                            <input type=\"checkbox\" id={todo.id} name=\"checkBoxData\" onChange={onSlectMultipleDelte}></input>\n                        </td>\n                    ): null }\n                    {Object.keys(todo).map((keyName, keyIndex) => {\n                        if(keyName !== 'id')\n                            return (\n                                <td key={keyIndex}>\n                                    {todo[keyName]}\n                                </td>\n                            )\n                    })}\n                    {props.Edit ||  props.Delete? (\n                        <td>\n                            <em className=\"fa fa-pencil-square-o ml-2 text-info\" aria-hidden=\"true\" style={{cursor:'pointer'}} onClick={()=>{\n                                setEditData(todo);\n                                setEditDataFlag(true);\n                            }}></em>\n                            <em id={index} className=\"fa fa-trash ml-3 text-danger\" aria-hidden=\"true\" style={{cursor:'pointer'}} onClick={props.onDelete}></em>\n                        </td>\n                    ) : null}\n                </tr>\n    });\n    return (\n        <>\n            { !editDataFlag ? (\n                <div>\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                {\n                                    props.fields && props.fields.length > 0 ? props.fields.map((f,i)=>{\n                                        if(f.fieldName === 'checkBox')\n                                            return <th scope=\"col\" key={i}>\n                                                <input type=\"checkbox\" id=\"checkBoxData\" name=\"checkBoxData\" value={allCheck} onChange={\n                                                    (event)=>{\n                                                            \n                                                            document.querySelectorAll('input[type=checkbox]').forEach( el => el.checked = !allCheck);\n                                                            if(!allCheck){\n                                                                let del = [];\n                                                                currentTodos && currentTodos.map((todo, index) => {\n                                                                    del.push({\n                                                                        id : Number(todo.id)\n                                                                    });\n                                                                });\n                                                                setBulkDeleteItems(del);\n                                                            }else{\n                                                                setBulkDeleteItems([]);\n                                                            }\n                                                            setallCheck(!allCheck);\n                                                    }\n                                                }></input>\n                                            </th>\n                                        else\n                                            return <th scope=\"col\" key={i}>{f.fieldName}</th>\n                                    }) : null\n                                }\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {renderMembers}\n                        </tbody>\n                    </table>\n                    <button type=\"button\" class=\"btn btn-danger mr-3\" onClick={deleteSelected}>Delete Selected</button>\n                    <strong>{\"Current Page : \"+ currentPage}</strong>\n                    <nav aria-label=\"Page navigation example\" className=\"float-right\">\n                        <ul className=\"pagination\">\n                            <li className=\"page-item Cursor\" onClick={()=>{\n                                    setCurrentPage(1);\n                                    document.querySelectorAll('input[type=checkbox]').forEach( el => el.checked = false);\n                            }}>\n                                <a className=\"page-link\" aria-label=\"Next\">\n                                    <span aria-hidden=\"true\">\n                                        <em class=\"fa fa-angle-double-left\" aria-hidden=\"true\"></em>\n                                    </span>\n                                </a>\n                            </li>\n                            <li className=\"page-item Cursor\" onClick={()=>{\n                                if(currentPage > 1){\n                                    let temp = currentPage;\n                                    setCurrentPage(temp-1);\n                                    document.querySelectorAll('input[type=checkbox]').forEach( el => el.checked = false);\n                                }\n                            }}>\n                                <a className=\"page-link\" aria-label=\"Previous\">\n                                    <span aria-hidden=\"true\">\n                                        <em class=\"fa fa-angle-left\" aria-hidden=\"true\"></em>\n                                    </span>\n                                </a>\n                            </li>\n                            {(()=>{\n                                var indents = [];\n                                for (var i = 0; i < numberOfPages; i++) {\n                                indents.push(<li className=\"page-item Cursor\" onClick={handleClick} key={i} id={i}><a className=\"page-link\" key={i}>{i+1}</a></li>);\n                                }\n                                return indents;\n                            })()}\n                            <li className=\"page-item Cursor\" onClick={()=>{\n                                if(currentPage < numberOfPages){\n                                    let temp = currentPage;\n                                    setCurrentPage(temp+1);\n                                    document.querySelectorAll('input[type=checkbox]').forEach( el => el.checked = false);\n                                }\n                            }}>\n                                <a className=\"page-link\" aria-label=\"Next\">\n                                    <span aria-hidden=\"true\">\n                                        <em class=\"fa fa-angle-right\" aria-hidden=\"true\"></em>\n                                    </span>\n                                </a>\n                            </li>\n                            <li className=\"page-item Cursor\" onClick={()=>{\n                                    setCurrentPage(numberOfPages);\n                                    document.querySelectorAll('input[type=checkbox]').forEach( el => el.checked = false);\n                            }}>\n                                <a className=\"page-link\" aria-label=\"Next\">\n                                    <span aria-hidden=\"true\">\n                                        <em class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></em>\n                                    </span>\n                                </a>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            ) : (\n                <DefaultEdit \n                    editData={editData} \n                    onSave={(data)=>{\n                        setEditDataFlag(false);\n                        props.onEdit(data);\n                    }}\n                    onGoBack={()=>{\n                        setEditDataFlag(false);\n                    }}\n                />\n            )}\n        </>\n    )\n}\nexport default Table;","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport getDefaultAction from './action';\nimport Table from './../../component/table';\nimport _ from 'lodash';\n\nconst AdminPage = () => {\n    const dispatch = useDispatch();\n    const members = useSelector(state =>{\n        return state.admindReducer.default;\n    });\n\n    const [fields, setFields] = useState([\n        {\n            _id:0,\n            fieldName : \"checkBox\",\n            type: \"checkBox\"\n        },{\n            _id:1,\n            fieldName : \"Name\",\n            type: \"text\"\n        },{\n            _id:2,\n            fieldName : \"Email\",\n            type: \"text\"\n        },{\n            _id:3,\n            fieldName : \"Role\",\n            type: \"text\"\n        },{\n            _id:4,\n            fieldName : \"Actions\",\n            type: \"actions\"\n        },\n    ]);\n    const [dataSet, setDataSet] = useState([])\n    const [Totalrecord, setTotalrecord] = useState(0)\n    const [search, setSearch] = useState(null)\n    \n    useEffect(() => {\n        console.log(\"Component Did Mount\", process.env.NODE_ENV, dataSet);\n        dispatch(getDefaultAction({payload : 'call api through axios'}))\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        console.log(\"Component Did update\", process.env.NODE_ENV, \"members\");\n        setDataSet(members);\n        if(members)\n            setTotalrecord(members.length);\n    }, [members]);\n\n    useEffect(() => {\n        console.log(\"Component Did update\", process.env.NODE_ENV, \"dataSet\");\n    }, [dataSet]);\n\n    useEffect(() => {\n        console.log(\"Component Did update\", process.env.NODE_ENV, \"Serach\");\n        if(search){\n            const res = dataSet.filter(obj => Object.values(obj).some(val => val.includes(search)));\n            setDataSet(res);\n        }else{\n            dispatch(getDefaultAction({payload : 'call api through axios'}))\n        }\n        \n    }, [search]);\n    \n    let updateUi=(temp)=>{\n        setDataSet(temp);\n        setTotalrecord(dataSet.length);\n    }\n\n    return (\n        <>\n            <div className=\"row mt-4\">\n                <div className=\"col-md-2\"></div>\n                <div className=\"col-md-8\">\n                    <div>\n                        <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            placeholder=\"Search By Name, Email, Role\"\n                            id=\"name\" \n                            aria-describedby=\"emailHelp\"\n                            value={search}\n                            onChange={(event)=>{\n                                setSearch(event.target.value);\n                            }}\n                        />\n                    </div>\n                    <Table\n                        fields={fields}\n                        dataSet={dataSet}\n                        bulkDelete={true}\n                        Edit={true}\n                        Delete={true}\n                        perPage={10}\n                        total={Totalrecord}\n                        onDelete={(event)=>{\n                            let temp = dataSet;\n                            temp.splice(event.currentTarget.id, 1);\n                            updateUi(temp);\n                        }}\n                        onBulkDelete={(arr)=>{\n                            let ids = [];\n                            arr.map((a,index)=>{\n                                ids.push(a.id);\n                            });\n                            let temp = dataSet;\n                            let data = temp.filter(item =>{ \n                                return !ids.includes(Number(item.id))\n                            });\n                            updateUi(data);\n                        }}\n                        onEdit={(data)=>{\n                            let temp = dataSet;\n                            let index = _.findIndex(temp, ['id', data.id]);\n                            temp[index].name = data.name;\n                            temp[index].email = data.email;\n                            temp[index].role = data.role;\n                        }}\n                    />\n                    <strong className=\"mt-4\">{\"Total records: \" + (dataSet && dataSet.length)}</strong>\n                </div>\n                <div className=\"col-md-2\"></div>\n            </div>\n            \n        </>\n    )\n}\nexport default AdminPage;"],"sourceRoot":""}