{"version":3,"sources":["container/AdminPage/constant.js","App.js","reportWebVitals.js","Util/constant.js","Util/apiService.js","container/AdminPage/adminSaga.js","rootSaga.js","appInitState.js","container/AdminPage/adminReducer.js","rootReducer.js","store.js","index.js"],"names":["DEFAULT_ACTION","PUT_DEFAULT_ACTION","loading","className","AdminPage","React","lazy","App","Suspense","fallback","exact","path","name","render","props","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SERVER_HOST","apiService","get","url","params","console","info","Axios","method","post","data","adminSaga","getSampleSagaData","payload","param","response","status","log","remoteData","put","type","takeLatest","rootSaga","all","initialState","members","rootReducer","combineReducers","admindReducer","state","action","actionState","default","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"2GAAA,oEAAO,IAAMA,EAAiB,gCACjBC,EAAqB,qC,yNCG5BC,EACJ,qBAAKC,UAAU,mBAAf,SACE,+CAIEC,EAAYC,IAAMC,MAAK,kBAAM,sDAgBpBC,E,4JAdb,WACE,OACE,cAAC,IAAD,UACI,cAAC,IAAMC,SAAP,CAAgBC,SAAUP,EAA1B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,SAASC,KAAK,aAAaC,OAAQ,SAAAC,GAAK,OAAI,cAACV,EAAD,eAAeU,OAC7E,cAAC,IAAD,CAAOH,KAAK,IAAIC,KAAK,UAAUC,OAAQ,SAAAC,GAAK,OAAI,cAACV,EAAD,eAAeU,kB,GAP3DC,aCCHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,yDCPDQ,EAKF,oD,qBCiBIC,EAnBI,CACjBC,IADiB,SACbC,EAAKC,GAEP,OADAC,QAAQC,KAAK,kCACNC,IAAM,CACXC,OAAQ,MACRL,IAAKH,EAAcG,EACnBC,YAGJK,KATiB,SASZN,EAAKO,GAER,OADAL,QAAQC,KAAK,kCAAmCI,GACzCH,IAAM,CACXC,OAAQ,OACRL,IAAKH,EAAcG,EACnBO,W,WCGIC,GALV,IAAMC,EAAiB,UAAG,SAApBA,EAA+BC,GAAX,uEACP,OADO,SATfZ,EAAWC,IAAI,gCAAiC,CAACY,MAAQ,UAAUpB,MAAK,SAACqB,GAC5E,GFNqB,MEMlBA,EAASC,OACR,OAAOD,EAASL,KAEhBL,QAAQY,IAAI,mBAKE,OAExB,OADIC,EADoB,gBAElBC,YAAI,CAAEC,KAAM5C,IAAoBqC,QAASK,IAFvB,oCAApBN,MAKN,SAAUD,IAAV,iEACE,OADF,SACQU,YAAW9C,IAAgBqC,GADnC,uCAIeD,Q,WCrBUW,GAAV,SAAUA,IAAV,iEACX,OADW,SACLC,YAAI,CAACZ,MADA,uCCHf,IACea,EADM,GCCjBA,EAAe,CACfC,QAAU,MCCCC,EADKC,YAAgB,CAACC,cDEf,WAAkC,IAAjCC,EAAgC,uDAAxBL,EAAeM,EAAS,uCACnD,OAAQA,EAAOV,MACb,KAAK5C,IACH,IAAIuD,EAAcF,EAElB,OADAE,EAAYC,QAAUF,EAAOjB,QACtBkB,EACT,QACE,OAAOF,MENTI,EAAiBC,cACjBC,EAAQC,YAAaV,EAAcF,EAAea,YAAgBJ,IACxEA,EAAeK,IAAIhB,GACJa,Q,MCEfI,IAASnD,OACP,cAAC,IAAD,CAAU+C,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,SAM1BlD,M","file":"static/js/main.a2d31bf1.chunk.js","sourcesContent":["export const DEFAULT_ACTION = 'view/Dashborad/DEFAULT_ACTION';\nexport const PUT_DEFAULT_ACTION = 'view/Dashborad/PUT_DEFAULT_ACTION';","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div>Loading...</div>\n  </div>\n)\n// Containers\nconst AdminPage = React.lazy(() => import('./container/AdminPage/AdminPage'));\nclass App extends Component {\n  render(){\n    return(\n      <HashRouter>\n          <React.Suspense fallback={loading}>\n            <Switch>\n              <Route exact path=\"/admin\" name=\"Admin Page\" render={props => <AdminPage {...props}/>} />\n              <Route path=\"/\" name=\"default\" render={props => <AdminPage {...props}/>} />\n            </Switch>\n          </React.Suspense>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SERVER_HOST = getBaseUrl();\nexport const STATUS_200_OK = 200;\n\nfunction getBaseUrl() {\n    //Switch Based on ENV\n    return \"https://geektrust.s3-ap-southeast-1.amazonaws.com\";\n}","import Axios from 'axios';\nimport { SERVER_HOST } from './constant';\n\nconst apiService = {\n  get(url, params) {\n    console.info('[Saga] Get API Call apiService');\n    return Axios({\n      method: 'GET',\n      url: SERVER_HOST + url,\n      params,\n    });\n  },\n  post(url, data) {\n    console.info('[Saga] Post API Call apiService', data);\n    return Axios({\n      method: 'POST',\n      url: SERVER_HOST + url,\n      data,\n    });\n  },\n};\n\nexport default apiService;","import { put, takeLatest } from \"redux-saga/effects\";\nimport {DEFAULT_ACTION , PUT_DEFAULT_ACTION} from './constant';\nimport {STATUS_200_OK} from '../../Util/constant'\nimport apiService from '../../Util/apiService';\n\nfunction getSample(){\n    return apiService.get(\"/adminui-problem/members.json\", {param : \"param\"}).then((response)=>{\n        if(response.status === STATUS_200_OK){\n            return response.data;\n        }else{\n            console.log(\"ERR_HANDLING\");\n        }\n    })\n}\n\nconst getSampleSagaData = function* (payload) {\n  let remoteData = yield getSample();\n  yield put({ type: PUT_DEFAULT_ACTION, payload: remoteData });\n};\n\nfunction* adminSaga() {\n  yield takeLatest(DEFAULT_ACTION, getSampleSagaData);\n}\n\nexport default adminSaga;","import { all } from \"redux-saga/effects\";\nimport adminSaga from './container/AdminPage/adminSaga'\n\nexport default function* rootSaga() {\n    yield all([adminSaga()]);\n}","const initialState = {}\nexport default initialState;","import { PUT_DEFAULT_ACTION } from './constant';\nlet initialState = {\n    members : null,\n};\nconst admindReducer = (state = initialState , action)=>{\n    switch (action.type) {\n      case PUT_DEFAULT_ACTION:\n        let actionState = state;\n        actionState.default = action.payload;\n        return actionState;\n      default:\n        return state\n    }\n}\n\nexport  {admindReducer};","import {admindReducer} from './container/AdminPage/adminReducer';\nimport {combineReducers } from  'redux';\nconst rootReducer = combineReducers({admindReducer});\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from './rootSaga';\nimport initialState from './appInitState';\nimport rootReducer from './rootReducer';\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore( rootReducer , initialState , applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport \"./main.scss\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}